  useEffect(() => {
    const updatedMenuItems = menuItems.map(item => {
      const matchesMainText = item.text.toLowerCase().includes(searchTerm.toLowerCase()); // Ana düğüm text'i ile  arama terimini kontrol eder
      // Alt düğümlerdeki text'leri kontrol eder
      const matchesSubNodes = item.subNodes.some(subItem =>
        subItem.text.toLowerCase().includes(searchTerm.toLowerCase())
      );
      // Ana düğüm veya alt düğümlerde eşleşme varsa, ilgili bölümü aç
      return {
        ...item,
        isOpen: searchTerm === '' ? false : (matchesMainText || matchesSubNodes), // Eğer ana ya da alt düğümde eşleşme varsa açık
      };
    });
    // Eşleşen ana öğeleri ve alt öğeleri filtrele
    // const filtered = updatedMenuItems.filter(item => item.isOpen || item.subNodes.some(subItem => subItem.isOpen));
    const filtered = searchTerm === ''
      ? updatedMenuItems // Arama terimi boşsa tüm öğeleri tut
      : updatedMenuItems.filter(item => item.isOpen || item.subNodes.some(subItem => subItem.isOpen));
      // Home sayfasından stream seçip app sayfasına geçmişse sol menüde ilgili stream'in submenülerinin açılması için 
    filtered.forEach(item => {
      if (item.menuId === selectedStreamId) {
        item.isOpen = true;
      }

      item.subNodes.forEach(subItem => {
        item.isOpen = true;
        if (subItem.id === selectedAppId) {
          item.isOpen = true; // Eğer subNode ile eşleşiyorsa ana öğeyi açık yap
        }
      });

    });
    setFilteredItems(filtered);
  }, [searchTerm,selectedStreamId,selectedAppId,menuItems]);
