  const groupData = (data, headers) => {
      if(data == null || headers == null) return;
      console.log(data)
      const groups = [];
      let currentGroup = [];
      let groupIndex = 0;
    
      data.forEach((item, index) => {
     
         // Eğer qText "-" ise, geçiyoruz
          if (item.qText === "-") {
            return;
          }

          // Boş string bulunan yerlere göre yeni grup başlatıyoruz
          if (headers[groupIndex] === " ") {
            if (currentGroup.length > 0) {
              groups.push(currentGroup);  // Önceki grup varsa ekleyelim
            }
            currentGroup = [];
            groupIndex++;  // Sonraki grup başlasın
          } else {
            // Başlık ile birlikte qText değerini ekliyoruz
            currentGroup.push({ header: headers[groupIndex], value: item.qText });
            groupIndex++;
          }
      });
    
      if (currentGroup.length) {
        groups.push(currentGroup); // Son grubu ekleyelim
      }
      if (groups.length > 0) {
        const firstGroup = groups[0];
    
        // İlk grubun ilk elemanını çıkarıyoruz
        const firstItem = firstGroup.shift();
    
        if (firstGroup.length > 0) {
          // İlk elemanın value'sunu son elemana header ile parantez içinde ekliyoruz
          const lastItem = firstGroup[firstGroup.length - 1];
          firstGroup[firstGroup.length - 1] = {
            ...lastItem,
            header: `${lastItem.header} (${firstItem.value})`,  // Header'a value ekliyoruz
            value: lastItem.value  // Son elemanın value'sunu koruyoruz
          };
        }
      }
      return groups;
    };
    
    const groupedData = groupData(tableDataArray, tableHeaderData);
    
    console.log(groupedData);
