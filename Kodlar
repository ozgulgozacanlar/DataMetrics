// objectIds, dinamik olarak gelen bir array
const objectIds = ['objectId1', 'objectId2'];  // Örnek array, burada objectId'leri dinamik olarak alıyoruz

// İlk önce tüm objectIds verilerini almak için bir işlem yapıyoruz
const allDimensionTitles = [];
const allMeasureTitles = [];
const allFirstArrayValues = [];
const allSecondArrayValues = [];

const fetchData = async () => {
  for (let i = 0; i < objectIds.length; i++) {
    const objectId = objectIds[i];

    try {
      // İlk olarak objectId için response verisini alıyoruz
      const response = await getObjectData(app, objectId);
      if (!response) {
        console.error(`TableChart Component : response verisi boş veya tanımsız. ID: ${objectId}`);
        continue;
      }

      // objectId için model verisini alıyoruz
      const model = await app.getObject(objectId);
      if (!model) {
        console.error(`TableChart Component : model verisi boş veya tanımsız. ID: ${objectId}`);
        continue;
      }

      // qDimensionInfo ve qMeasureInfo başlıklarını alıyoruz
      const dimensionTitles = model.layout.qHyperCube.qDimensionInfo.map(item => item.qFallbackTitle);
      const measureTitles = model.layout.qHyperCube.qMeasureInfo.map(item => item.qFallbackTitle);

      allDimensionTitles.push(...dimensionTitles);
      allMeasureTitles.push(...measureTitles);

      // response verisini alıp firstArray ve secondArray'leri oluşturuyoruz
      const firstArray = [...response.map(item => item[0].qText)];
      allFirstArrayValues.push(...firstArray);

      // measureTitles'i slice'lıyoruz ve her başlık için verileri topluyoruz
      const secondArray = measureTitles.slice(1).map((headerItem, idx) => {
        const values = response.map(item => item[idx + 1].qText);
        return [headerItem, ...values];
      });

      allSecondArrayValues.push(...secondArray);
      
      console.log(`ObjectId: ${objectId}`);
      console.log("First Array Değeri: ", firstArray);
      console.log("Second Array Değeri: ", secondArray);
      
    } catch (error) {
      console.error(`TableChart Component : ${objectId} için işlem yapılırken hata oluştu:`, error);
    }
  }

  // İşlem tamamlandığında tüm verileri kullanabiliriz
  console.log("Tüm First Array Değerleri:", allFirstArrayValues);
  console.log("Tüm Second Array Değerleri:", allSecondArrayValues);
  // Burada setTableHeaderData veya setTableDataArray işlemleri yapılabilir
  // setTableHeaderData(allMeasureTitles);
  // setTableDataArray(allFirstArrayValues, allSecondArrayValues);
};

// Veriyi almak için fonksiyonu çağırıyoruz
fetchData();
