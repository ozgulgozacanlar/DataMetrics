const drawHorizontalBarChart = (visibleCount = 5) => {
    if (data.length === 0) return;

    const svg = d3.select(svgRef.current);
    svg.selectAll('*').remove();

    const margin = { top: 0, right: 20, bottom: 20, left: 35 };
    const width = svg.node().getBoundingClientRect().width - margin.left - margin.right;
    const height = 1000;

    svg
        .attr("width", width)
        .attr("height", height);

    const xScale = d3.scaleLinear()
        .domain([0, d3.max(data, (d) => d.value)])
        .range([0, width - margin.left - margin.right]);

    const yScale = d3.scaleBand()
        .domain(data.slice(0, visibleCount).map(d => d.name)) // yalnızca görünüm için ilk 5 öğe
        .range([margin.top, height - margin.bottom])
        .padding(0.2);

    const g = svg.append("g")
        .attr("transform", `translate(${margin.left},${margin.top})`);

    // X ekseni oluştur
    g.append("g")
        .attr("class", "x-axis")
        .attr("transform", `translate(0,${height - margin.bottom})`)
        .call(d3.axisBottom(xScale).ticks(5));

    // Y eksenini oluştur
    g.append("g")
        .attr("class", "y-axis")
        .call(d3.axisLeft(yScale));

    // Çubuklar oluştur
    g.selectAll(".bar")
        .data(data.slice(0, visibleCount))
        .enter()
        .append("rect")
        .attr("class", "bar")
        .attr("x", 0)
        .attr("y", d => yScale(d.name))
        .attr("width", d => xScale(d.value))
        .attr("height", yScale.bandwidth());

    g.selectAll(".text")
        .data(data.slice(0, visibleCount))
        .enter()
        .append("text")
        .attr("x", d => xScale(d.value) + 5)
        .attr("y", d => yScale(d.name) + yScale.bandwidth() / 2)
        .attr("dy", ".35em")
        .text(d => `${d.value}`);
};
return (
    <div style={{ width: "100%", height: "400px", overflowY: "scroll" }}
         onScroll={(e) => handleScroll(e)}>
        <svg ref={svgRef} style={{ width: "100%" }}></svg>
    </div>
);

const handleScroll = (e) => {
  const scrollPosition = e.target.scrollTop;
  const visibleCount = Math.min(data.length, Math.ceil(scrollPosition / 20) + 5);
  drawHorizontalBarChart(visibleCount);
};
