  useEffect(() => {
    setLoading(true);
    dispatch(setName('bookmarks'));

    if (!app) {
      openApp(import.meta.env.VITE_APP_APP1)
        .then((_app) => {
          setApp(_app);
        })
        .catch((error) => {
          console.error('Uygulama başlatma hatası:', error);
        });
    } else {
      //Sık kullanılanlar tablo datası
      getObjectData(app, 'bZjSh')
        .then((data) => {
          setBookmarks(data);
        })
        .catch((error) => {
          console.error('Tablo verisi alma hatası:', error);
        });
    }

  }, []);
  useEffect(() => {
    console.log("deneme")
    //*** Sık Kullanılanlar tablo data düzenlemesi start ***
    if (bookmarks) {
      console.log(bookmarks)
      var frequentlyUsingArray = [];
      setFrequentlyUsingApps([]);
      bookmarks.forEach(group => {
        const appId = group[2].qText; // 3. elemanın qText değeri (appId)
        var obj = { name: "", publishTime: "", thunmnail: "", description: "", id: "" };
        getAppById(appId).then((appArr) => {
          if (appArr) {
            obj.name = appArr.name;
            obj.publishTime = appArr.publishTime;
            obj.thunmnail = appArr.thumbnail;
            obj.description = appArr.description;
            obj.id = appArr.id;
            frequentlyUsingArray.push(obj);
            setFrequentlyUsingApps((prevData) => {
              const filteredData = frequentlyUsingArray.filter(item =>
                !prevData.some(prev => prev.name === item.name)
              );
              return [...prevData, ...filteredData]
            });
            obj = { name: "", publishTime: "", thunmnail: "", description: "" };

          }
          console.log(frequentlyUsingArray)

        })
      });
      
    }
    setLoading(false);
    //*** Sık Kullanılanlar tablo data düzenlemesi end ***

  }, [bookmarks]);
