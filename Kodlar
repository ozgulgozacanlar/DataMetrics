  useEffect(() => {
    dispatch(setName('sheets'));
    setLoading(true);
    console.log("asjald")
    if (appId || lastSelectedAppId != "null") {
  
      //const sheetsArray = [];
      dispatch(setSelectedStreamId(lastSelectedStreamId));
      if (appId == null) {
        dispatch(setSelectedAppId(lastSelectedAppId));
      } else {
        sessionStorage.setItem("lastSelectedAppId", appId);
      }

      openApp(appId).then((_app) => {
        _app.getList("BookmarkList", function (reply) {
          if (reply.qBookmarkList.qItems.length > 0 && !navbarClick) { //Eğer navbarClick true ise yani navbar'daki app ismine tıklanmışsa default sheet'i açmaz , app içindeki sheet'leri listeler. ( o yüzden tıklanmışsa else'e girer.) 
            const defaultItems = reply.qBookmarkList.qItems.filter(item => item.qData.description === "default"); //DataOps bookmark'nda description:default tanımlananlar default açılacak sheet'leri içerir.
            if (defaultItems.length > 0) {
              // En güncel modifiedDate'e sahip olanı bul
              const mostRecentItem = defaultItems.reduce((prev, current) => {
                return (new Date(prev.qMeta.modifiedDate) > new Date(current.qMeta.modifiedDate)) ? prev : current;
              });
              const sheetId = mostRecentItem.qData.sheetId;
              var obj = { appId, sheetId };
              dispatch(setIframeData(obj));
            }
            else {
              dispatch(setIframeData(null));
              loadSheets(_app);
            }
          }
          else {
            dispatch(setIframeData(null));
            loadSheets(_app);
          }
        })

      })
      // getSheetById(appId != null ? appId : lastSelectedAppId ).then((sheets) =>{
      //   for (let k = 0; k < sheets.length; k++) {
      //     var objSheet = {appId:"", sheetId:"", name:"", publishTime:"",thumbnail :"",description:""};
      //     objSheet.appId = appId;
      //     objSheet.sheetId = sheets[k].engineObjectId;
      //     objSheet.name = sheets[k].name;
      //     objSheet.publishTime =  sheets[k].publishTime;
      //     objSheet.thumbnail =  sheets[k].thumbnail =! undefined ? sheets[k].thumbnail : "";
      //     objSheet.description =  sheets[k].description;
      //     sheetsArray.push(objSheet);
      //   }
      //   console.log(sheetsArray)
      //   setSheets(sheetsArray);

      //   setTimeout(() => {
      //     setLoading(false);
      //    }, 2000);

      //  })
    }
    console.log(window.errorOccurred)
    const interval = setInterval(() => {
      if (window.errorOccurred) {
      
        setModalText("Access Denied");
        window.errorOccurred = false;
        clearInterval(interval);

      }
    }, 500);

  }, [appId, lastSelectedAppId, navbarClick]);
