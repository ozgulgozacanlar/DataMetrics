/* Bu CSS'i global stil dosyanıza veya component'e özel stil dosyanıza ekleyebilirsiniz */
.child-row {
  padding-left: 20px; /* Alt satırlara 20px sol iç boşluk */
}

 const addIdsToData = (data) => {
    return data.map((item, index) => {
      const newItem = { ...item, id: item.id || `row-${index}` };
      if (newItem.children && newItem.children.length > 0) {
        newItem.children = addIdsToData(newItem.children); // Alt öğeleri işliyoruz
      }
      return newItem;
    });
  };

  const updatedData = addIdsToData(data);

  const collectAllRowKeys = (items, parentKey = '') => {
    let keys = [];
    items.forEach((item) => {
      const currentKey = parentKey ? `${parentKey}-${item.id}` : `${item.id}`;
      keys.push(currentKey);
      if (item.children.length > 0) {
        keys = [...keys, ...collectAllRowKeys(item.children, currentKey)];
      }
    });
    return keys;
  };

  useEffect(() => {
    const allRowKeys = collectAllRowKeys(updatedData);
    setExpandedRows(allRowKeys); // İlk açılışta tüm satırları açıyoruz
  }, []);

  const toggleRow = (id, parentId = '') => {
    const key = parentId ? `${parentId}-${id}` : `${id}`;
    setExpandedRows((prevState) =>
      prevState.includes(key)
        ? prevState.filter((rowId) => rowId !== key)
        : [...prevState, key]
    );
  };

 const renderRow = (item, parentId = '', level = 0) => (
  <React.Fragment key={item.id}>
    <tr key={item.id} className={level > 0 ? 'child-row' : ''} style={{ paddingLeft: `${level * 20}px` }}>
      <td>
        {item.children.length > 0 && (
          <button
            className="btn btn-info btn-sm ms-2"
            type="button"
            onClick={() => toggleRow(item.id, parentId)}
          >
            {expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) ? '-' : '+'}
          </button>
        )}
        {item.name}
      </td>
      {item.data.map((value, index) => (
        <td key={index}>{value}</td>
      ))}
    </tr>
    {item.children.length > 0 &&
      expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) &&
      item.children.map((child) =>
        renderRow(child, `${parentId ? parentId + '-' : ''}${item.id}`, level + 1) // Seviye arttıkça padding ekle
      )}
  </React.Fragment>
);


  return (
    <div className="container mt-5">
      <div className="col-md-12">
        <div className="panel panel-default">
          <div className="panel-heading">Datametrics Table</div>
          <div className="panel-body">
            <table className="table table-condensed table-striped">
              <thead>
                <tr>
                  <th></th>
                  <th></th>
                  <th>Son 6 Ay Trend</th>
                  <th>2023 Aralık</th>
                  <th>2024 Ağustos</th>
                  <th>2024 Eylül</th>
                  <th>2024 Ekim</th>
                  <th>2024 Kasım</th>
                </tr>
              </thead>
              <tbody>
                {updatedData.map((item) => renderRow(item, '', 0))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
}
