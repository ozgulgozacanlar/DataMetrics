 useEffect(() => {
        if (svgSize.width > 0 && svgSize.height > 0 ) {
            setTimeout(() => {
                drawHorizontalBarChartwithVal();

            }, 100);
        }
      }, [graphicName,data, svgSize]);

  const updateDimensions = () => {
        if (chartContainerRef.current) {
          setSvgSize({
            width: chartContainerRef.current.offsetWidth, // div'in genişliği
            height: chartContainerRef.current.offsetHeight, // div'in yüksekliği
          });
        }
      };
    
      // Responsive tasarım için boyutları günceller
      useEffect(() => {
        setTimeout(() => {
            updateDimensions(); // İlk boyutlandırmayı yap
            window.addEventListener('resize', updateDimensions); // Pencere boyutu değiştiğinde boyutları güncelle
        
            return () => {
              window.removeEventListener('resize', updateDimensions); // Temizleme işlemi
            };
        }, 100);
      
      }, [isVisible]);
