  useEffect(() => {
    dispatch(setName('home'));
    dispatch(setIframeData(null));
    sessionStorage.removeItem("lastSelectedAppId");
    sessionStorage.removeItem("lastSelectedStreamId");

    if (!app) {
      openApp(import.meta.env.VITE_APP_APP1)
        .then((_app) => {
          setApp(_app);
        })
        .catch((error) => {
          console.error('Uygulama başlatma hatası:', error);
        });
    } else {
      setLoading(true);
      getObjectData(app, 'jpmS')
        .then((data) => {
          setData(data);

        })
        .catch((error) => {
          console.error('Tablo verisi alma hatası:', error);
        });

        //Sık kullanılanlar tablo datası
        getObjectData(app, 'bZjSh')
        .then((data) => {
          setFrequentlyUsingData(data);
        })
        .catch((error) => {
          console.error('Tablo verisi alma hatası:', error);
        });       
        //*** favorite card işlemleri start ***
        getFavorites().then(async (favArr) => {
          // console.log("HOME PAGE GET FAVORITES APP : " + favArr)

          const favoriteArray = [];
          for (const favId of favArr) {
            const appArr = await getAppById(favId);
            if (appArr) {
              favoriteArray.push({
                name: appArr.name,
                publishTime: appArr.publishTime,
                thunmnail: appArr.thumbnail,
                description: appArr.description,
                favStatus: true,
                id: appArr.id
              });
            }
          }
          console.log(favoriteArray)
          setFavorites(favoriteArray);
        }).catch((error) => {
          console.error('Favori data hatası:', error);
        });
        //*** favorite card işlemleri end ***

    }
  }, [dispatch, app , navbarState])
