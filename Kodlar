const renderRow = (item, parentId = '', level = 0) => (
  <>
    {/* Satır Görünümü */}
    <tr className={level === 0 ? 'parent-row' : 'child-row' + (expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) ? ' expanded' : '')}>
      <td style={{ paddingLeft: `${level * 26}px` }} onClick={() => toggleRow(item.id, parentId)}>
        <div className="first-column">
          {item.children.length > 0 && (
            <button
              className={`rounded-button ${expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) ? 'down' : 'up'}`}
              type="button"
              onClick={(e) => {
                e.stopPropagation();
                toggleRow(item.id, parentId);
              }}
            >
            </button>
          )}
          <span className="ellipsis">{item.name.replace(/^[\s•⸰]+/, '')}</span>
        </div>
      </td>
      {item.data.map((value, index) => (
        index === 1 && lineStatus
          ? (
            <td key={index}>
              <div
                className="line-chart-area"
                onClick={() => handleRowClick(item)}
                style={{
                  cursor: 'pointer',
                  textAlign: 'center',
                }}
              >
                <ResponsiveLineChart app={app} objectId={lineGraphId} item={item} lineWidth={395} lineHeight={100} />
              </div>
            </td>
          )
          : <td key={index}>{value}</td>
      ))}
    </tr>
    {/* Çocuk Satırları */}
    {item.children.length > 0 &&
      expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) &&
      item.children.map((child) =>
        <tr className={`child-row ${expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) ? 'expanded' : ''}`}>
          <td colSpan={tableHeaderData.length} style={{ padding: 0 }}>
            {child.data.map((value, index) => (
              <div key={index}>{value}</div>
            ))}
          </td>
        </tr>
      )
    }
  </>
);
