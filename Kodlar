 const drawComboChart = () => {

        if (dataBar.length === 0 && dataLine.length === 0) return;


        const svg = d3.select(svgRef.current)

        svg.selectAll("*").remove()

    

    // Margin ve boyutlar
    const margin = { top: 20, right: 80, bottom: 60, left: 80 }; // Sağda ve solda daha fazla boşluk
    const width = 600 - margin.left - margin.right;
    const height = 400 - margin.top - margin.bottom;

    svg.attr('width', 600)
    .attr('height', 400)
    .append('g')
    .attr('transform', 'translate(50, 50)');


   // Zaman verisini parse etmek için yardımcı fonksiyon
   const parseDate = d3.timeParse("%b-%y");  // "%b-%y" Jan-23 gibi formatları işlemek için


   // Ortak X eksenis
   const x = d3.scaleTime()
   .domain(d3.extent(dataBar, d => parseDate(translateMonthToEnglish(d.date))))  // Türkçe tarihleri İngilizce'ye çevirip parse ediyoruz
   .range([0, width]);

   // Y eksenleri
   const yBar = d3.scaleLinear()
     .domain([0, d3.max(dataBar, d => d.value)])
     .nice()
     .range([height, 0]);

   const yLine1 = d3.scaleLinear()
     .domain([0, d3.max(dataLine, d => d.value1)])
     .nice()
     .range([height, 0]);

   const yLine2 = d3.scaleLinear()
     .domain([0, d3.max(dataLine, d => d.value2)])
     .nice()
     .range([height, 0]);

   // X ekseni çizimi
   svg.append('g')
     .attr('transform', `translate(0, ${height})`)
     .call(d3.axisBottom(x));

   // Y eksenleri
   svg.append('g')
     .attr('class', 'y-axis-left')
     .call(d3.axisLeft(yBar));

   // Sağ Y ekseni (line chart için)
   svg.append('g')
     .attr('class', 'y-axis-right')
     .attr('transform', `translate(${width}, 0)`)
     .call(d3.axisRight(yLine1));

   // Bar Chart çizimi
   svg.selectAll('.bar')
     .data(dataBar)
     .enter()
     .append('rect')
     .attr('class', 'bar')
     .attr('x', (d, i) => x(parseDate(translateMonthToEnglish(d.date))) - (width / dataBar.length) / 2) // Barı ortalayalım
     .attr('y', d => yBar(d.value))
     .attr('width', width / dataBar.length - 10) // Barların genişliği
     .attr('height', d => height - yBar(d.value))
     .attr('fill', 'steelblue');

   // Line Chart çizimi
   const line1 = d3.line()
     .x(d => x(parseDate(translateMonthToEnglish(d.date))))
     .y(d => yLine1(d.value1));

   const line2 = d3.line()
     .x(d => x(parseDate(translateMonthToEnglish(d.date))))
     .y(d => yLine2(d.value2));

   svg.append('path')
     .data([dataLine])
     .attr('class', 'line1')
     .attr('d', line1)
     .attr('fill', 'none')
     .attr('stroke', '#2b85c9')
     .attr('stroke-width', 2);

   svg.append('path')
     .data([dataLine])
     .attr('class', 'line2')
     .attr('d', line2)
     .attr('fill', 'none')
     .attr('stroke', '#f06d06')
     .attr('stroke-width', 2);

    }
   // Türkçe ayları İngilizce'ye dönüştüren  fonksiyon
       const translateMonthToEnglish = (dateString) => {
        const months = {
            'Oca': 'Jan',
            'Şub': 'Feb',
            'Mar': 'Mar',
            'Nis': 'Apr',
            'May': 'May',
            'Haz': 'Jun',
            'Tem': 'Jul',
            'Ağu': 'Aug',
            'Eyl': 'Sep',
            'Eki': 'Oct',
            'Kas': 'Nov',
            'Ara': 'Dec'
        };

        // Türkçe ayları İngilizce'ye dönüştürme
        const parts = dateString.split('-');
        if (parts.length === 2) {
            const month = parts[0];
            const year = parts[1];
            const englishMonth = months[month];

            if (englishMonth) {
                return `${englishMonth}-${year}`;
            }
        }
        return dateString;  // Eğer dönüştürülmüş format yoksa, orijinal formatı döndür
    };  
  // Bar chart için veri (daha büyük sayılar)
  const dataBar = [
    { date: 'Oca-24', value: 6046 },
    { date: 'Şub-24', value: 6987 },
    { date: 'Mar-24', value: 5363 },
    { date: 'Nis-24', value: 7654 },
    { date: 'May-24', value: 8543 }
  ];

  // Line chart için veri (daha küçük sayılar)
  const dataLine = [
    { date: 'Oca-24', value1: 1.11, value2: 2.34 },
    { date: 'Şub-24', value1: 2.51, value2: 2.80 },
    { date: 'Mar-24', value1: 3.11, value2: 3.41 },
    { date: 'Nis-24', value1: 3.45, value2: 4.11 },
    { date: 'May-24', value1: 4.11, value2: 4.85 }
  ];
