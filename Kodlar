const deneme = (array) => {
    const { qLeft, qData } = array;
    const result = [];
    let currentParent = null;

    // Yardımcı fonksiyon: Aynı öğe var mı kontrol et
    const doesItemExistInChildren = (parent, item) => {
        // Parent.children null veya undefined ise, boş bir dizi döndürüyoruz
        const children = parent.children || [];
        return children.some(child => child.name.trim() === item.name.trim());
    };

    qLeft.forEach((leftItem, index) => {
        const dataItem = {
            name: leftItem.qSubNodes[0]?.qText || leftItem.qText,
            data: [leftItem.qText, ...qData[index].map(val => val.qText)],
            children: []
        };

        leftItem.qSubNodes.forEach(subNode => {
            const trimmedText = subNode.qText.trim();
            if (trimmedText.startsWith("•") || trimmedText.startsWith("⸰")) {
                const childItem = {
                    name: subNode.qText,
                    data: [leftItem.qText, ...qData[index].map(val => val.qText)],
                    children: []
                };

                // Eğer aynı çocuk zaten mevcutsa, tekrar eklememek için kontrol yapıyoruz
                if (!doesItemExistInChildren(dataItem, childItem)) {
                    dataItem.children.push(childItem);
                }
            }
        });

        // Eğer "•" ile başlıyorsa, mevcut parent'a ekliyoruz
        if (dataItem.name.trim().startsWith("•")) {
            if (currentParent && !doesItemExistInChildren(currentParent, dataItem)) {
                currentParent.children.push(dataItem);
            }
        }
        // Eğer "⸰" ile başlıyorsa, currentParent.children'da son öğeye ekliyoruz
        else if (dataItem.name.trim().startsWith("⸰")) {
            if (currentParent && currentParent.children.length > 0 && !doesItemExistInChildren(currentParent.children[currentParent.children.length - 1], dataItem)) {
                currentParent.children[currentParent.children.length - 1].children.push(dataItem);
            }
        } 
        // Eğer "•" veya "⸰" ile başlamıyorsa, doğrudan result'a ekliyoruz
        else {
            if (!doesItemExistInChildren(result, dataItem)) {
                result.push(dataItem);
                currentParent = dataItem;  // Bu öğeyi currentParent olarak belirliyoruz
            }
        }
    });

    console.log(result);  // Sonuçları konsola yazdırıyoruz
};
