.parent-row {
  background-color: #f0f0f0; /* Gri renk */
}

const renderRow = (item, parentId = '', level = 0) => (
  <React.Fragment key={item.id}>
    <tr key={item.id} className={level === 0 ? 'parent-row' : 'child-row'}>
      <td style={{ paddingLeft: `${level * 20}px` }}>
        {item.children.length > 0 && (
          <button
            className="btn btn-info btn-sm ms-2"
            type="button"
            onClick={() => toggleRow(item.id, parentId)}
          >
            {expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) ? '-' : '+'}
          </button>
        )}
        {item.name}
      </td>
      {item.data.map((value, index) => (
        <td key={index}>{value}</td>
      ))}
    </tr>
    {item.children.length > 0 &&
      expandedRows.includes(`${parentId ? parentId + '-' : ''}${item.id}`) &&
      item.children.map((child) =>
        renderRow(child, `${parentId ? parentId + '-' : ''}${item.id}`, level + 1)
      )}
  </React.Fragment>
);
